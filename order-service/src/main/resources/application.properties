server.port=8085
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order_service
spring.datasource.username=root
spring.datasource.password=test@123
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
#eureka.client.serviceUrl.defaultZone = http://eureka:password@localhost:8761/eureka
spring.application.name=order-service

management.health.circuit-breakers.enabled = true
management.endpoints.web.exposure.include = *
management.endpoints.jmx.exposure.include = *
management.endpoint.health.show-details = always

# Resilience4j properties
resilience4j.circuit-breaker.instances.inventory.registerHealthIndicator = true
resilience4j.circuit-breaker.instances.inventory.event-consumer-buffer-size = 1
resilience4j.circuit-breaker.instances.inventory.slidingWindowType = COUNT_BASED
resilience4j.circuit-breaker.instances.inventory.sidingWindowSize = 5
resilience4j.circuit-breaker.instances.inventory.failureRateThreshold = 50
resilience4j.circuit-breaker.instances.inventory.waitDurationInOpenState = 5s
resilience4j.circuit-breaker.instances.inventory.permittedNumberOfCallsInHalfOpenState = 3
resilience4j.circuit-breaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled = true

# Resilience4j Time out properties
resilience4j.time-limiter.instances.inventory.timeout-duration = 3s

# Resilience4j Retry Properties
#resilience4j.retry.instances.inventory.max-attempts = 3
#resilience4j.retry.instances.inventory.wait-duration = 5s

spring.zipkin.base-url = http://localhost:9411
spring.sleuth.sampler.probability = 1.0

# Kafka Properties
spring.kafka.bootstrap-servers = localhost:9092
spring.kafka.template.default-topic = notificationTopic
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping = event:com.microservice.notification.OrderPlacedEvent
spring.cloud.compatibility-verifier.enabled=false
spring.kafka.producer.properties.spring.json.trusted.packages=*